service: basic

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: eu-west-1
  environment:
    CANDIDATE_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    CANDIDATE_EMAIL_TABLE: "candidate-email-${opt:stage, self:provider.stage}"

  iamRoleStatements:
   - Effect: "Allow"
     Action:
       - "s3:ListBucket"
       - "dynamodb:Query"
       - "dynamodb:Scan"
       - "dynamodb:GetItem"
       - "dynamodb:PutItem"
     Resource: "*"

functions:
  hello:
    handler: api/handler.hello
    memorySize: 128
    description: says hello
    events:
      - http: 
          path: hello
          method: post
  submit:
    handler: api/handler.submit
    memorySize: 128
    description: Submit candidate information and starts interview process.
    events:
      - http:
          path: submit
          method: post
  listCandidates:
    handler: api/handler.list
    memorySize: 128
    description: List all candidates
    events:
      - http:
          path: candidates
          method: get
  candidateDetails:
    handler: api/handler.get
    events:
      - http:
          path: candidates/{id}
          method: get
      
resources:
 Resources:
   CandidatesDynamoDbTable:
     Type: AWS::DynamoDB::Table
     DeletionPolicy: Retain
     Properties:
      AttributeDefinitions:
        -
          AttributeName: id
          AttributeType: S
      KeySchema:
        -
          AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: "NEW_AND_OLD_IMAGES"
      TableName: ${self:provider.environment.CANDIDATE_TABLE}